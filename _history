{"entries":[{"timestamp":1737227337724,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables><variable id=\"b|^D1-,#^6ZmKAJjigug\">direction</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"b|^D1-,#^6ZmKAJjigug\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></statement></block>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":401,"length2":75},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let direction = 0\nlet food = [randint(0, 4), randint(0, 4)]\nlet snake = [[2, 2]]\nled.plotBrightness(food[0], food[1], 127)\nbasic.forever(function on_forever() {\n    led.plotBrightness(2, 2, 255)\n})\ninput.onButtonPressed(Button.A, function on_button_pressed_a() {\n    \n    direction = (direction - 90) % 360\n})\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n    \n    direction = (direction + 90) % 360\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":422,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":214,"start2":214,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"direction = 0\nfood = (randint(0, 4), randint(0, 4))\nsnake = [(2,2)]\nled.plot_brightness(food[0], food[1], 127)\n\ndef on_forever():\n    led.plot_brightness(2, 2, 255)\nbasic.forever(on_forever)\n\ndef on_button_pressed_a():\n    global direction\n    direction = (direction - 90) % 360\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global direction\n    direction = (direction + 90) % 360\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n"}]},{"timestamp":1737227930564,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = ["],[-1,"]\nlet direction_change = {\n    0 : [0, 1],\n    90 : [1, 0],\n}\n\nlet snake = [[2, 2]]\nfunction set_food() {\n    \n    for (let _ = 0; _ < 100; _++) {\n        food = [randint(0, 4), randint(0, 4)]\n        if (snake.indexOf(food) < 0) {\n            led.plotBrightness(food[0], food[1], 127)\n            break\n        }\n        \n    }\n}\n\nset_food()\nfunction snake_step() {\n    let new_point = []\n}\n"],[1,"randint(0, 4), randint(0, 4)]\nlet snake = [[2, 2]]\nled.plotBrightness(food[0], food[1], 127)\nbasic.forever(function on_forever() {\n    led.plotBrightness(2, 2, 255)\n})"],[0,"\ninp"]],"start1":26,"start2":26,"length1":400,"length2":175}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," = ("],[-1,")\ndirection_change = {\n    0: "],[1,"randint"],[0,"(0, "],[-1,"1),\n    90: (1, 0),\n    180\n}\n\nsnake = [(2,2)]\n\ndef set_food():\n    global food\n    for _ in range(100):\n        food = (randint(0, 4), randint(0, 4))\n        if food not in snake:\n            led.plot_brightness(food[0], food[1], 127)\n            break\n\nset_food()\n\ndef snake_step():\n    new_point = "],[1,"4), randint(0, 4))\nsnake = [(2,2)]\nled.plot_brightness(food[0], food[1], 127)\n\ndef on_forever():\n    led.plot_brightness(2, 2, 255)\nbasic.forever(on_forever)"],[0,"\n\nde"]],"start1":18,"start2":18,"length1":343,"length2":176}]}]},{"timestamp":1737228528393,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e = "],[-1,"[[0, 1], [1, 0], [0, -1],"],[1,"{\n    0 : [0, 1],\n    90 :"],[0," ["],[-1,"-"],[0,"1, 0]"],[-1,"]"],[1,",\n}\n"],[0,"\nlet"]],"start1":51,"start2":51,"length1":42,"length2":45},{"diffs":[[0,"ke_step() {\n"],[-1,"    \n"],[0,"    let new_"]],"start1":385,"start2":385,"length1":29,"length2":24},{"diffs":[[0," = ["],[-1,"snake[0][0] + direction_change[direction][0], snake[0][1] + direction_change[direction][1]"],[0,"]\n}\n"]],"start1":414,"start2":414,"length1":98,"length2":8},{"diffs":[[0,"ction - "],[-1,"1"],[1,"90"],[0,") % 3"],[1,"60"],[0,"\n})\ninpu"]],"start1":514,"start2":514,"length1":22,"length2":25},{"diffs":[[0,"n + "],[-1,"1"],[1,"90"],[0,") % 3"],[1,"60"],[0,"\n})\n"]],"start1":630,"start2":630,"length1":14,"length2":17}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"hange = "],[-1,"("],[1,"{"],[0,"\n   "],[1," 0:"],[0," (0, 1),"]],"start1":35,"start2":35,"length1":21,"length2":24},{"diffs":[[0,"    "],[-1,"(1, 0),\n    (0, -1"],[1,"90: (1, 0"],[0,"),\n    "],[-1,"(-1, 0)\n)"],[1,"180\n}"],[0,"\n\nsn"]],"start1":60,"start2":60,"length1":42,"length2":29},{"diffs":[[0,"    "],[-1,"global snake\n    new_point = (\n        snake[0][0] + direction_change[direction][0],\n        snake[0][1] + direction_change[direction][1]\n    )\n    if new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or new_point in snake:\n       "],[1,"new_point ="],[0," \n\nd"]],"start1":341,"start2":341,"length1":266,"length2":19},{"diffs":[[0,"ction - "],[-1,"1"],[1,"90"],[0,") % 3"],[1,"60"],[0,"\ninput.o"]],"start1":428,"start2":428,"length1":22,"length2":25},{"diffs":[[0,"n + "],[-1,"1"],[1,"90"],[0,") % 3"],[1,"60"],[0,"\ninp"]],"start1":575,"start2":575,"length1":14,"length2":17}]}]},{"timestamp":1737229119865,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = ["],[-1,"0, 0"],[0,"]\nle"]],"start1":26,"start2":26,"length1":12,"length2":8},{"diffs":[[0,"2]]\n"],[-1,"led.plot(2, 2)\n"],[0,"func"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"ake_"],[-1,"run"],[1,"step"],[0,"() {"]],"start1":381,"start2":381,"length1":11,"length2":12},{"diffs":[[0,"    "],[-1,"let new_point: number[];\n    \n    while (true) {\n       "],[1,"\n    let"],[0," new"]],"start1":394,"start2":394,"length1":64,"length2":16},{"diffs":[[0,"1]]\n"],[-1,"        if (new_point[0] < 0 || new_point[0] > 4 || new_point[1] < 0 || new_point[1] > 4 || snake.indexOf(new_point) >= 0) {\n            basic.showIcon(IconNames.Angry)\n            basic.showNumber(snake.length)\n            return\n        }\n        \n        if (new_point != food) {\n            led.unplot(snake[-1][0], snake[-1][1])\n            snake.removeAt(-1)\n        }\n        \n        led.plot(new_point[0], new_point[1])\n        snake.unshift(new_point)\n    }\n"],[0,"}\n\ni"]],"start1":508,"start2":508,"length1":476,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," = ("],[-1,"0,0"],[0,")\ndi"]],"start1":18,"start2":18,"length1":11,"length2":8},{"diffs":[[0,",2)]"],[-1,"\nled.plot(2,2)"],[0,"\n\nde"]],"start1":108,"start2":108,"length1":22,"length2":8},{"diffs":[[0,"ake_"],[-1,"run"],[1,"step"],[0,"():\n"]],"start1":339,"start2":339,"length1":11,"length2":12},{"diffs":[[0,"ake\n"],[-1,"    while True:\n    "],[0,"    "]],"start1":364,"start2":364,"length1":28,"length2":8},{"diffs":[[0,"int = (\n"],[-1,"    "],[0,"        "]],"start1":378,"start2":378,"length1":20,"length2":16},{"diffs":[[0,"0],\n        "],[-1," "],[-1,"   "],[0,"snake[0][1] "]],"start1":436,"start2":436,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"    )\n   "],[1,")\n"],[0,"    "],[-1," "],[0,"if n"]],"start1":493,"start2":493,"length1":22,"length2":14},{"diffs":[[0,"    "],[-1,"    basic.show_icon(IconNames.ANGRY)\n            basic.show_number(len(snake))\n            return\n        if new_point != food:\n            led.unplot(snake[-1][0], snake[-1][1])\n            snake.remove_at(-1)\n        led.plot(new_point[0], new_point[1])\n        snake.unshift(new_point)"],[0,"\n\nde"]],"start1":610,"start2":610,"length1":296,"length2":8}]}]},{"timestamp":1737229638116,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"        basic.pause(1000)\n"],[0,"    "]],"start1":461,"start2":461,"length1":34,"length2":8},{"diffs":[[0,"ake["],[-1,"snake.length - 1][0], snake[snake.length - "],[1,"-1][0], snake[-"],[0,"1][1"]],"start1":886,"start2":886,"length1":51,"length2":23},{"diffs":[[0,"eAt("],[-1,"snake.length - "],[1,"-"],[0,"1)\n "]],"start1":935,"start2":935,"length1":23,"length2":9},{"diffs":[[0,"\n}\n\n"],[-1,"input.onLogoEvent(TouchButtonEvent.Pressed, function on_logo_event_pressed() {\n    snake_run()\n})\n"],[0,"inpu"]],"start1":1045,"start2":1045,"length1":106,"length2":8},{"diffs":[[0,"    direction = "],[1,"("],[0,"direction - 1\n  "]],"start1":1119,"start2":1119,"length1":32,"length2":33},{"diffs":[[0," - 1"],[-1,"\n    if (direction < 0) {\n        direction = 3\n    }\n    "],[1,") % 3"],[0,"\n})\n"]],"start1":1145,"start2":1145,"length1":66,"length2":13},{"diffs":[[0,"ction = "],[1,"("],[0,"directio"]],"start1":1236,"start2":1236,"length1":16,"length2":17},{"diffs":[[0," + 1"],[-1,"\n    if (direction > 3) {\n        direction = 0\n    }\n    "],[1,") % 3"],[0,"\n})\n"]],"start1":1254,"start2":1254,"length1":66,"length2":13}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ue:\n"],[-1,"        basic.pause(1000)\n"],[0,"    "]],"start1":396,"start2":396,"length1":34,"length2":8},{"diffs":[[0,"nplot(snake["],[-1,"len(snake)"],[0,"-1][0], snak"]],"start1":811,"start2":811,"length1":34,"length2":24},{"diffs":[[0,", snake["],[-1,"len(snake)"],[0,"-1][1])\n"]],"start1":829,"start2":829,"length1":26,"length2":16},{"diffs":[[0,"_at("],[-1,"len(snake)-1)\n        "],[1,"-1)"],[0,"\n   "]],"start1":869,"start2":869,"length1":30,"length2":11},{"diffs":[[0,"t)\n\n"],[-1,"def on_logo_event_pressed():\n    snake_run()\ninput.on_logo_event(TouchButtonEvent.PRESSED, on_logo_event_pressed)\n\n"],[0,"def "]],"start1":952,"start2":952,"length1":123,"length2":8},{"diffs":[[0,"    direction = "],[1,"("],[0,"direction - 1\n  "]],"start1":1004,"start2":1004,"length1":32,"length2":33},{"diffs":[[0," - 1"],[-1,"\n    if direction < 0:\n        direction ="],[1,") %"],[0," 3\ni"]],"start1":1030,"start2":1030,"length1":50,"length2":11},{"diffs":[[0,"ction = "],[1,"("],[0,"directio"]],"start1":1152,"start2":1152,"length1":16,"length2":17},{"diffs":[[0," + 1"],[-1,"\n    if direction > 3:\n        direction = 0"],[1,") % 3"],[0,"\ninp"]],"start1":1170,"start2":1170,"length1":52,"length2":13}]}]},{"timestamp":1737230237836,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = [[0, "],[-1,"-"],[0,"1], [1, "]],"start1":56,"start2":56,"length1":17,"length2":16},{"diffs":[[0,"[1, 0], [0, "],[1,"-"],[0,"1], [-1, 0]]"]],"start1":68,"start2":68,"length1":24,"length2":25},{"diffs":[[0,"   }\n}\n\n"],[1,"set_food()\n"],[0,"function"]],"start1":370,"start2":370,"length1":16,"length2":27},{"diffs":[[0,"oint"],[-1,"[0] == food[0] && new_point[1] ="],[1," !"],[0,"= food"],[-1,"[1]"],[0,") {\n"],[-1,"            set_food()\n        } else {\n"],[0,"    "]],"start1":871,"start2":871,"length1":93,"length2":20},{"diffs":[[0,"   }\n}\n\n"],[1,""],[0,"input.on"]],"start1":1109,"start2":1109,"length1":16,"length2":16},{"diffs":[[0,") {\n"],[-1,"    \n    basic.clearScreen()\n    snake = [[2, 2]]\n    led.plot(2, 2)\n    set_food()\n"],[0,"    "]],"start1":1192,"start2":1192,"length1":92,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"(0, "],[-1,"-"],[0,"1),\n"],[1,""],[0,"    "]],"start1":52,"start2":52,"length1":13,"length2":12},{"diffs":[[0,"(1, 0),\n    (0, "],[1,"-"],[0,"1),\n    (-1, 0)\n"]],"start1":64,"start2":64,"length1":32,"length2":33},{"diffs":[[0," break\n\n"],[1,"set_food()\n\n"],[0,"def snak"]],"start1":330,"start2":330,"length1":16,"length2":28},{"diffs":[[0,"oint"],[-1,"[0] ="],[1," !"],[0,"= food"],[-1,"[0] and new_point[1] == food[1]:\n            set_food()\n        else"],[0,":\n  "]],"start1":806,"start2":806,"length1":87,"length2":16},{"diffs":[[0,"ake)-1)\n"],[1,"        \n"],[0,"        "]],"start1":925,"start2":925,"length1":16,"length2":25},{"diffs":[[0,"point)\n\n"],[1,""],[0,"def on_l"]],"start1":1013,"start2":1013,"length1":16,"length2":16},{"diffs":[[0,"():\n"],[-1,"    global snake\n    basic.clear_screen()\n    snake = [(2,2)]\n    led.plot(2,2)\n    set_food()\n"],[0,"    "]],"start1":1046,"start2":1046,"length1":103,"length2":8}]}]},{"timestamp":1737230790658,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    let in_snake: boolean;\n"],[0,"    \n"],[1,""],[0,"    "]],"start1":148,"start2":148,"length1":40,"length2":13},{"diffs":[[0,"   i"],[-1,"n_snake = false\n        for (let s of snake) {\n            if (s[0] == food[0] && s[1] == food[1]) {\n                in_snake = true\n            }\n            \n        }\n        if (!in_snake"],[1,"f (snake.indexOf(food) < 0"],[0,") {\n"]],"start1":244,"start2":244,"length1":199,"length2":34},{"diffs":[[0,"[];\n"],[-1,"    let in_snake: boolean;\n"],[0,"    "]],"start1":426,"start2":426,"length1":35,"length2":8},{"diffs":[[0,"1]]\n"],[-1,"        in_snake = false\n        for (let s of snake) {\n            if (s[0] == new_point[0] && s[1] == new_point[1]) {\n                in_snake = true\n            }\n            \n        }\n"],[0,"    "]],"start1":589,"start2":589,"length1":197,"length2":8},{"diffs":[[0," || "],[-1,"in_"],[0,"snake"],[-1,") {\n            music._playDefaultBackground(music.builtInPlayableMelody(Melodies.Dadadadum), music.PlaybackMode.InBackground)"],[1,".indexOf(new_point) >= 0) {"],[0,"\n   "]],"start1":681,"start2":681,"length1":142,"length2":40},{"diffs":[[0,"w_point[1])\n"],[1,""],[0,"        snak"]],"start1":1125,"start2":1125,"length1":24,"length2":24},{"diffs":[[0,"nt)\n"],[-1,"        music.play(music.tonePlayable(Note.C5, music.beat(BeatFraction.Sixteenth)), music.PlaybackMode.UntilDone)\n"],[0,"    "]],"start1":1166,"start2":1166,"length1":122,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"   i"],[-1,"n_snake = False\n        for s in snake:\n            if s[0] == food[0] and s[1] == food[1]:\n                in_snake = True\n        if not in_"],[1,"f food not in "],[0,"snak"]],"start1":239,"start2":239,"length1":150,"length2":22},{"diffs":[[0,"   i"],[-1,"n_snake = False\n        for s in snake:\n            if s[0] == new_point[0] and s[1] == new_point[1]:\n                in_snake = True\n        if new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or in_snake:\n            music._play_default_background(music.built_in_playable_melody(Melodies.DADADADUM), music.PlaybackMode.IN_BACKGROUND)"],[1,"f new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or new_point in snake:"],[0,"\n   "]],"start1":566,"start2":566,"length1":371,"length2":109},{"diffs":[[0,"w_point[1])\n"],[1,""],[0,"        snak"]],"start1":1025,"start2":1025,"length1":24,"length2":24},{"diffs":[[0,"int)"],[-1,"\n        music.play(music.tone_playable(Note.C5, music.beat(BeatFraction.SIXTEENTH)), music.PlaybackMode.UNTIL_DONE)"],[0,"\n\nde"]],"start1":1065,"start2":1065,"length1":124,"length2":8}]}]},{"timestamp":1737231290900,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"\n    food = [randint(0, 4), randint(0, 4)]\n"],[1,"let in_snake: boolean;\n    \n    for (let _ = 0; _ < 100; _++) {\n        food = [randint(0, 4), randint(0, 4)]\n        in_snake = false\n        for (let s of snake) {\n            if (s[0] == food[0] && s[1] == food[1]) {\n                in_snake = true\n            }\n            \n        }\n        if (!in_snake) {\n        "],[0,"    "]],"start1":152,"start2":152,"length1":51,"length2":330},{"diffs":[[0,"1], "],[1,"1"],[0,"27)\n"],[1,"            break\n        }\n        \n    }\n"],[0,"}\n\nf"]],"start1":515,"start2":515,"length1":12,"length2":56},{"diffs":[[0,"e {\n"],[-1,"            if (snake[snake.length - 1][0] != food[0] || snake[snake.length - 1][1] != food[1]) {\n    "],[0,"    "]],"start1":1455,"start2":1455,"length1":110,"length2":8},{"diffs":[[0,"1])\n"],[-1,"            }\n            \n"],[0,"    "]],"start1":1534,"start2":1534,"length1":35,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"al food\n"],[1,"    for _ in range(100):\n    "],[0,"    food"]],"start1":155,"start2":155,"length1":16,"length2":45},{"diffs":[[0,"(0, 4))\n"],[1,"        in_snake = False\n        for s in snake:\n            if s[0] == food[0] and s[1] == food[1]:\n                in_snake = True\n        if not in_snake:\n        "],[0,"    led."]],"start1":226,"start2":226,"length1":16,"length2":182},{"diffs":[[0,"1], "],[1,"1"],[0,"27)"],[1,"\n            break"],[0,"\n\nde"]],"start1":438,"start2":438,"length1":11,"length2":30},{"diffs":[[0,"se:\n"],[-1,"            if snake[len(snake)-1][0] != food[0] or snake[len(snake)-1][1] != food[1]:\n    "],[0,"    "]],"start1":1265,"start2":1265,"length1":99,"length2":8}]}]},{"timestamp":1737231794317,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," {\n    \n"],[-1,"    \n"],[0,"    basi"]],"start1":1685,"start2":1685,"length1":21,"length2":16},{"diffs":[[0,"2]]\n"],[-1,"    direction = randint(0, 3)\n"],[0,"    "]],"start1":1734,"start2":1734,"length1":38,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"l snake\n"],[-1,"    global direction\n"],[0,"    basi"]],"start1":1492,"start2":1492,"length1":37,"length2":16},{"diffs":[[0,"2)]\n"],[-1,"    direction = randint(0, 3)\n"],[0,"    "]],"start1":1541,"start2":1541,"length1":38,"length2":8}]}]},{"timestamp":1737232083609,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"NqDAOoJL6M26qLhx+y/m\""],[0," x=\""]],"start1":156,"start2":156,"length1":34,"length2":8},{"diffs":[[0,"set\""],[-1," id=\"I4Hl)FXdYMg}at+G98eh\""],[0,"><fi"]],"start1":224,"start2":224,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"-3S[8v-=NBZ/ZUh;TP3G\""],[0,"><fi"]],"start1":332,"start2":332,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"{X%SSjZ=PbCG,hhV]TYb\""],[0," x=\""]],"start1":433,"start2":433,"length1":34,"length2":8}]}]},{"timestamp":1737289198318,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":241,"start2":241,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// Tady jsou testy. Při použití tohoto balíčku jako rozšíření nebude zkompilováno.\n"}]}],"snapshots":[{"timestamp":1737227337723,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"had\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1737229153218,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"b|^D1-,#^6ZmKAJjigug\">direction</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"b|^D1-,#^6ZmKAJjigug\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></statement></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"direction = 0\nfood = ()\ndirection_change = (\n    (0, 1),\n    (1, 0),\n    (0, -1),\n    (-1, 0)\n)\n\nsnake = [(2,2)]\n\ndef set_food():\n    global food\n    for _ in range(100):\n        food = (randint(0, 4), randint(0, 4))\n        if food not in snake:\n            led.plot_brightness(food[0], food[1], 127)\n            break\n\nset_food()\n\ndef snake_step():\n    global snake\n    new_point = (\n        snake[0][0] + direction_change[direction][0],\n        snake[0][1] + direction_change[direction][1]\n    )\n    if new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or new_point in snake:\n        \n\ndef on_button_pressed_a():\n    global direction\n    direction = (direction - 1) % 3\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global direction\n    direction = (direction + 1) % 3\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n","pxt.json":"{\n    \"name\": \"had\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1737230954150,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"b|^D1-,#^6ZmKAJjigug\">direction</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"b|^D1-,#^6ZmKAJjigug\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></statement></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"direction = 0\nfood = (0,0)\ndirection_change = (\n    (0, -1),\n    (1, 0),\n    (0, 1),\n    (-1, 0)\n)\n\nsnake = [(2,2)]\nled.plot(2,2)\n\ndef set_food():\n    global food\n    for _ in range(100):\n        food = (randint(0, 4), randint(0, 4))\n        in_snake = False\n        for s in snake:\n            if s[0] == food[0] and s[1] == food[1]:\n                in_snake = True\n        if not in_sna\n            led.plot_brightness(food[0], food[1], 127)\n            break\n\ndef snake_run():\n    global snake\n    while True:\n        basic.pause(1000)\n        new_point = (\n            snake[0][0] + direction_change[direction][0],\n            snake[0][1] + direction_change[direction][1]\n        )\n        if new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or new_point in snake:\n            basic.show_icon(IconNames.ANGRY)\n            basic.show_number(len(snake))\n            return\n        if new_point[0] == food[0] and new_point[1] == food[1]:\n            set_food()\n        else:\n            led.unplot(snake[len(snake)-1][0], snake[len(snake)-1][1])\n            snake.remove_at(len(snake)-1)\n        led.plot(new_point[0], new_point[1])\n        snake.unshift(new_point)\n\ndef on_logo_event_pressed():\n    global snake\n    basic.clear_screen()\n    snake = [(2,2)]\n    led.plot(2,2)\n    set_food()\n    snake_run()\ninput.on_logo_event(TouchButtonEvent.PRESSED, on_logo_event_pressed)\n\ndef on_button_pressed_a():\n    global direction\n    direction = direction - 1\n    if direction < 0:\n        direction = 3\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global direction\n    direction = direction + 1\n    if direction > 3:\n        direction = 0\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n","pxt.json":"{\n    \"name\": \"had\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1737289198318,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"b|^D1-,#^6ZmKAJjigug\">direction</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"b|^D1-,#^6ZmKAJjigug\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></statement></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"direction = 0\nfood = (0,0)\ndirection_change = (\n    (0, -1),\n    (1, 0),\n    (0, 1),\n    (-1, 0)\n)\n\nsnake = [(2,2)]\nled.plot(2,2)\n\ndef set_food():\n    global food\n    food = (randint(0, 4), randint(0, 4))\n    led.plot_brightness(food[0], food[1], 27)\n\ndef snake_run():\n    global snake\n    while True:\n        basic.pause(1000)\n        new_point = (\n            snake[0][0] + direction_change[direction][0],\n            snake[0][1] + direction_change[direction][1]\n        )\n        in_snake = False\n        for s in snake:\n            if s[0] == new_point[0] and s[1] == new_point[1]:\n                in_snake = True\n        if new_point[0] < 0 or new_point[0] > 4 or new_point[1] < 0 or new_point[1] > 4 or in_snake:\n            music._play_default_background(music.built_in_playable_melody(Melodies.DADADADUM), music.PlaybackMode.IN_BACKGROUND)\n            basic.show_icon(IconNames.ANGRY)\n            basic.show_number(len(snake))\n            return\n        if new_point[0] == food[0] and new_point[1] == food[1]:\n            set_food()\n        else:\n            if snake[len(snake)-1][0] != food[0] or snake[len(snake)-1][1] != food[1]:\n                led.unplot(snake[len(snake)-1][0], snake[len(snake)-1][1])\n            snake.remove_at(len(snake)-1)\n        led.plot(new_point[0], new_point[1])\n        snake.unshift(new_point)\n        music.play(music.tone_playable(Note.C5, music.beat(BeatFraction.SIXTEENTH)), music.PlaybackMode.UNTIL_DONE)\n\ndef on_logo_event_pressed():\n    global snake\n    global direction\n    basic.clear_screen()\n    snake = [(2,2)]\n    direction = randint(0, 3)\n    led.plot(2,2)\n    set_food()\n    snake_run()\ninput.on_logo_event(TouchButtonEvent.PRESSED, on_logo_event_pressed)\n\ndef on_button_pressed_a():\n    global direction\n    direction = direction - 1\n    if direction < 0:\n        direction = 3\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    global direction\n    direction = direction + 1\n    if direction > 3:\n        direction = 0\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n","pxt.json":"{\n    \"name\": \"had\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1737289198325}